import { legacyPlugin as api } from '@snyk/cli-interface';
import { ManifestFiles, DependencyUpdates } from './types';
export interface PythonInspectOptions {
    command?: string;
    allowMissing?: boolean;
    args?: string[];
}
declare type Options = api.SingleSubprojectInspectOptions & PythonInspectOptions;
export declare function inspect(root: string, targetFile: string, options?: Options): Promise<api.SinglePackageResult>;
/**
 * Given contents of manifest file(s) and a set of upgrades, apply the given
 * upgrades to a manifest and return the upgraded manifest.
 *
 * Currently only supported for `requirements.txt` - at least one file named
 * `requirements.txt` must be in the manifests.
 **/
export declare function applyRemediationToManifests(manifests: ManifestFiles, upgrades: DependencyUpdates): ManifestFiles;
export {};
